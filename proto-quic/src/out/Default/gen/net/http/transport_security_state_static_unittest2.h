// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is generated by net/tools/transport_security_state_generator/.
// See transport_security_state_static.template for more information on the data
// in this file.

#include <stdint.h>

#include "net/http/transport_security_state_source.h"

static const char kSPKIHash_TestSPKI1[] =
    "\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"
    "\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01";

static const char kSPKIHash_TestSPKI2[] =
    "\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02"
    "\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02";

static const char* const kExpectCTReportURIs[] = {
    "https://report.example.com/ct-upload",
    "https://report.example.com/ct-upload-alt",
    nullptr,
};

static const char* const kExpectStapleReportURIs[] = {
    "https://report.example.com/staple-upload",
    "https://report.example.com/staple-upload-alt",
    nullptr,
};

static const char* const kNoRejectedPublicKeys[] = {
    NULL,
};

static const char kNoReportURI[] = "";

static const char* const kTest1AcceptableCerts[] = {
    kSPKIHash_TestSPKI1,
    nullptr,
};
static const char kTest1ReportURI[] = "https://report.example.com/hpkp-upload";

static const char* const kTest2AcceptableCerts[] = {
    kSPKIHash_TestSPKI2,
    nullptr,
};
static const char* const kTest2RejectedCerts[] = {
    kSPKIHash_TestSPKI1,
    nullptr,
};

static const struct net::TransportSecurityStateSource::Pinset kPinsets[] = {
    {kTest1AcceptableCerts, kNoRejectedPublicKeys, kTest1ReportURI},
    {kTest2AcceptableCerts, kTest2RejectedCerts, kNoReportURI},
};

static const uint8_t kHSTSHuffmanTree[] = {
    0xed, 0xf3, 0xf4, 0x00, 0xf0, 0xff, 0x01, 0x02, 0xe3, 0xf8, 0xe5, 0x04,
    0xe1, 0xe8, 0xad, 0xae, 0x06, 0x07, 0xe9, 0xeb, 0xef, 0x09, 0xec, 0x0a,
    0x0b, 0x80, 0x08, 0x0c, 0x05, 0x0d, 0x03, 0x0e,
};

static const uint8_t kPreloadedHSTSData[] = {
    0xff, 0xf7, 0x16, 0x01, 0xe8, 0x54, 0x57, 0x3c, 0x20, 0x7d, 0xdd, 0x67,
    0xc8, 0x47, 0xc0, 0xf3, 0xe8, 0x7f, 0xea, 0xd0, 0xa8, 0xae, 0x78, 0x81,
    0xee, 0xc5, 0xec, 0x71, 0xc5, 0xff, 0xf8, 0xba, 0xad, 0xce, 0x22, 0xc5,
    0xcd, 0xc4, 0x74, 0xa4, 0xb3, 0x24, 0x03, 0x96, 0x6c, 0xc0,
};

static const unsigned kPreloadedHSTSBits = 362;
static const unsigned kHSTSRootPosition = 233;

static const net::TransportSecurityStateSource kHSTSSource = {
  kHSTSHuffmanTree,
  sizeof(kHSTSHuffmanTree),
  kPreloadedHSTSData,
  kPreloadedHSTSBits,
  kHSTSRootPosition,
  kExpectCTReportURIs,
  kExpectStapleReportURIs,
  kPinsets,
  arraysize(kPinsets)
};
