// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is generated by net/tools/transport_security_state_generator/.
// See transport_security_state_static.template for more information on the data
// in this file.

#include <stdint.h>

#include "net/http/transport_security_state_source.h"

static const char kSPKIHash_TestSPKI1[] =
    "\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"
    "\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01";

static const char kSPKIHash_TestSPKI2[] =
    "\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02"
    "\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02";

static const char* const kExpectCTReportURIs[] = {
    "https://report.example.org/ct-upload",
    "https://report.example.com/ct-upload",
    nullptr,
};

static const char* const kExpectStapleReportURIs[] = {
    "https://report.example.com/staple-upload",
    "https://report.badssl.com/staple-upload",
    nullptr,
};

static const char* const kNoRejectedPublicKeys[] = {
    NULL,
};

static const char kNoReportURI[] = "";

static const char* const kTest1AcceptableCerts[] = {
    kSPKIHash_TestSPKI1,
    nullptr,
};
static const char kTest1ReportURI[] = "https://report.example.com/hpkp-upload";

static const char* const kTest2AcceptableCerts[] = {
    kSPKIHash_TestSPKI2,
    nullptr,
};
static const char* const kTest2RejectedCerts[] = {
    kSPKIHash_TestSPKI1,
    nullptr,
};

static const struct net::TransportSecurityStateSource::Pinset kPinsets[] = {
    {kTest1AcceptableCerts, kNoRejectedPublicKeys, kTest1ReportURI},
    {kTest2AcceptableCerts, kTest2RejectedCerts, kNoReportURI},
};

static const uint8_t kHSTSHuffmanTree[] = {
    0xe4, 0xe7, 0xe2, 0xe3, 0x00, 0x01, 0xeb, 0xf2, 0xe8, 0xe9, 0x03, 0x04,
    0x02, 0x05, 0xe1, 0xec, 0x80, 0x07, 0x06, 0x08, 0xef, 0xf3, 0xf8, 0x0a,
    0x0b, 0xff, 0xed, 0xf0, 0xae, 0xe5, 0x0d, 0x0e, 0x0c, 0x0f, 0x09, 0x10,
};

static const uint8_t kPreloadedHSTSData[] = {
    0xff, 0xc5, 0x97, 0x7b, 0xee, 0x34, 0x7a, 0x50, 0x5f, 0x69, 0x34, 0xc8,
    0x84, 0xbf, 0x9f, 0x71, 0xa3, 0xd6, 0x41, 0xc6, 0x9e, 0xf4, 0x1f, 0x13,
    0x1c, 0x71, 0xbf, 0x4e, 0x60, 0x61, 0x2a, 0x0c, 0x78, 0xd5, 0x5e, 0x90,
    0xfb, 0xd1, 0x52, 0xed, 0x14, 0x14, 0xd1, 0xb2, 0x31, 0x4a,
};

static const unsigned kPreloadedHSTSBits = 367;
static const unsigned kHSTSRootPosition = 326;

static const net::TransportSecurityStateSource kHSTSSource = {
  kHSTSHuffmanTree,
  sizeof(kHSTSHuffmanTree),
  kPreloadedHSTSData,
  kPreloadedHSTSBits,
  kHSTSRootPosition,
  kExpectCTReportURIs,
  kExpectStapleReportURIs,
  kPinsets,
  arraysize(kPinsets)
};
